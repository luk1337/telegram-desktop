From c8d2958d54759d38cbe06e9136baf93b0c92405e Mon Sep 17 00:00:00 2001
From: xiota <github@mentalfossa.com>
Date: Mon, 4 Nov 2024 20:40:37 +0000
Subject: [PATCH 1/2] Fix some ffmpeg 7.x related errors

---
 Telegram/SourceFiles/ui/controls/round_video_recorder.cpp | 7 ++++++-
 1 file changed, 6 insertions(+), 1 deletion(-)

diff --git a/Telegram/SourceFiles/ui/controls/round_video_recorder.cpp b/Telegram/SourceFiles/ui/controls/round_video_recorder.cpp
index f01df2165be3fd..4ba0e7768bd129 100644
--- a/Telegram/SourceFiles/ui/controls/round_video_recorder.cpp
+++ b/Telegram/SourceFiles/ui/controls/round_video_recorder.cpp
@@ -107,9 +107,15 @@ class RoundVideoRecorder::Private final {
 		std::array<int64, kMaxStreams> lastDts = { 0 };
 	};
 
+#if DA_FFMPEG_CONST_WRITE_CALLBACK
+	static int Write(void *opaque, const uint8_t *_buf, int buf_size) {
+		uint8_t *buf = const_cast<uint8_t *>(_buf);
+#else
 	static int Write(void *opaque, uint8_t *buf, int buf_size) {
+#endif
 		return static_cast<Private*>(opaque)->write(buf, buf_size);
 	}
+
 	static int64_t Seek(void *opaque, int64_t offset, int whence) {
 		return static_cast<Private*>(opaque)->seek(offset, whence);
 	}
@@ -388,7 +394,6 @@ bool RoundVideoRecorder::Private::initAudio() {
 	_audioCodec->sample_rate = kAudioFrequency;
 #if DA_FFMPEG_NEW_CHANNEL_LAYOUT
 	_audioCodec->ch_layout = AV_CHANNEL_LAYOUT_MONO;
-	_audioCodec->channels = _audioCodec->ch_layout.nb_channels;
 #else
 	_audioCodec->channel_layout = AV_CH_LAYOUT_MONO;
 	_audioCodec->channels = _audioChannels;

From a2be973d9cdf955f3b01610c7247da0f157dc2a4 Mon Sep 17 00:00:00 2001
From: xiota <github@mentalfossa.com>
Date: Mon, 4 Nov 2024 22:49:00 +0000
Subject: [PATCH 2/2] Use alternate fix for ffmpeg const issue

---
 .../SourceFiles/ui/controls/round_video_recorder.cpp  | 11 +++--------
 1 file changed, 3 insertions(+), 8 deletions(-)

diff --git a/Telegram/SourceFiles/ui/controls/round_video_recorder.cpp b/Telegram/SourceFiles/ui/controls/round_video_recorder.cpp
index 4ba0e7768bd129..d073802e0f386a 100644
--- a/Telegram/SourceFiles/ui/controls/round_video_recorder.cpp
+++ b/Telegram/SourceFiles/ui/controls/round_video_recorder.cpp
@@ -107,12 +107,7 @@ class RoundVideoRecorder::Private final {
 		std::array<int64, kMaxStreams> lastDts = { 0 };
 	};
 
-#if DA_FFMPEG_CONST_WRITE_CALLBACK
-	static int Write(void *opaque, const uint8_t *_buf, int buf_size) {
-		uint8_t *buf = const_cast<uint8_t *>(_buf);
-#else
-	static int Write(void *opaque, uint8_t *buf, int buf_size) {
-#endif
+	static int Write(void *opaque, const uint8_t *buf, int buf_size) {
 		return static_cast<Private*>(opaque)->write(buf, buf_size);
 	}
 
@@ -120,7 +115,7 @@ class RoundVideoRecorder::Private final {
 		return static_cast<Private*>(opaque)->seek(offset, whence);
 	}
 
-	int write(uint8_t *buf, int buf_size);
+	int write(const uint8_t *buf, int buf_size);
 	int64_t seek(int64_t offset, int whence);
 
 	void initEncoding();
@@ -236,7 +231,7 @@ RoundVideoRecorder::Private::~Private() {
 	finishEncoding();
 }
 
-int RoundVideoRecorder::Private::write(uint8_t *buf, int buf_size) {
+int RoundVideoRecorder::Private::write(const uint8_t *buf, int buf_size) {
 	if (const auto total = _resultOffset + int64(buf_size)) {
 		const auto size = int64(_result.size());
 		constexpr auto kReserve = 1024 * 1024;
